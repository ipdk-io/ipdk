#!/usr/bin/env bash
#
# Copyright (C) 2022 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
# NOTICE: THIS FILE HAS BEEN MODIFIED BY INTEL CORPORATION UNDER COMPLIANCE
# WITH THE APACHE 2.0 LICENSE FROM THE ORIGINAL WORK
#

[ "$DEBUG" == 'true' ] && set -x

app=spdk_tgt args=() limit_args=()
SPDK_PORT="${SPDK_PORT:-5260}"
SPDK_IP_ADDR="${SPDK_IP_ADDR:-"0.0.0.0"}"

# Override default app
if [[ -n $SPDK_APP ]]; then
	app=$SPDK_APP
fi

# Define extra arguments to the app
if [[ -n $SPDK_ARGS ]]; then
	IFS=" " read -r -a args <<< "$SPDK_ARGS"
fi

# Limit the app with to following options,
# to allow for minimal impact on the host.
limit_args+=("--no-pci")
limit_args+=("--num-trace-entries" 0)

# if set, don't include limit_args[] on the cmdline
if [[ ! -v SPDK_NO_LIMIT ]]; then
	args+=("${limit_args[@]}")
fi

if [[ -e /config ]]; then
	args+=("--json" "/config")
fi

function is_port_on_ip_addr_open() {
	local ip_addr="$1"
	local port="$2"
	timeout 1 bash -c "cat < /dev/null > /dev/tcp/${ip_addr}/${port}" &> /dev/null
	return $?
}

function wait_until_socket_file_exists() {
	local socket="$1"
	local timeout="${2:-10}"
	local wait_counter=0
	while [ "${wait_counter}" -le "${timeout}" ] ; do
		if [ -S "$socket" ]; then
			return 0
		fi
		sleep 1
		wait_counter=$(( wait_counter + 1 ))
	done
	return 1
}

function expose_spdk() {
	local ip_addr="$1"
	local port="$2"
	local socket="$3"
	if ! wait_until_socket_file_exists "$spdk_socket"; then
		echo "SPDK unix socket is not created" >&2
		exit 1
	fi
	if is_port_on_ip_addr_open "$ip_addr" "$port"; then
		echo "Cannot run socat for $ip_addr and port $port." >&2
		echo "Port is already in use." >&2
		exit 1
	fi
	socat TCP-LISTEN:"$port",reuseaddr,bind="$ip_addr",fork \
		UNIX-CLIENT:"$spdk_socket"
}


spdk_socket="/var/tmp/spdk.sock"
EXPOSE_SPDK="${EXPOSE_SPDK:-"true"}"
if [ "$EXPOSE_SPDK" == "true" ]; then
	expose_spdk "$SPDK_IP_ADDR" "$SPDK_PORT" "$spdk_socket" &
fi

spdk_pid_file="/spdk_pid"
rm -f "$spdk_pid_file"
$app "${args[@]}" -r "$spdk_socket" -f "$spdk_pid_file"
